{"version":3,"file":"user-idle.js","sources":["../../src/services/user-idle.js"],"sourcesContent":["import Ember from 'ember';\nimport EventManagerService from './-private/event-manager';\nimport { inject as injectService } from '@ember/service';\nimport { cancel, debounce } from '@ember/runloop';\nimport { tracked } from '@glimmer/tracking';\n\nexport default class UserIdleService extends EventManagerService {\n  @injectService('user-activity')\n  userActivity;\n\n  _debouncedTimeout = null;\n  activeEvents = ['userActive'];\n  IDLE_TIMEOUT = 600000; // 10 minutes\n  @tracked isIdle = false;\n\n  _setupListeners(method) {\n    this.activeEvents.forEach((event) => {\n      this.userActivity[method](event, this, this.resetTimeout);\n    });\n  }\n\n  // TODO: migrate to constructor\n  // eslint-disable-next-line ember/classic-decorator-hooks\n  init() {\n    super.init(...arguments);\n\n    if (Ember.testing) {\n      // Shorter debounce in testing mode\n      this.IDLE_TIMEOUT = 10;\n    }\n    this._setupListeners('on');\n    this.resetTimeout();\n  }\n\n  willDestroy() {\n    this._setupListeners('off');\n    if (this._debouncedTimeout) {\n      cancel(this._debouncedTimeout);\n    }\n\n    super.willDestroy(...arguments);\n  }\n\n  resetTimeout() {\n    let oldIdle = this.isIdle;\n    this.isIdle = false;\n    if (oldIdle) {\n      this.trigger('idleChanged', false);\n    }\n    this._debouncedTimeout = debounce(this, this.setIdle, this.IDLE_TIMEOUT);\n  }\n\n  setIdle() {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.isIdle = true;\n    this.trigger('idleChanged', true);\n  }\n}\n"],"names":["UserIdleService","_dec","injectService","_class","EventManagerService","constructor","args","_initializerDefineProperty","_descriptor","_defineProperty","_descriptor2","_setupListeners","method","activeEvents","forEach","event","userActivity","resetTimeout","init","arguments","Ember","testing","IDLE_TIMEOUT","willDestroy","_debouncedTimeout","cancel","oldIdle","isIdle","trigger","debounce","setIdle","isDestroyed","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","tracked"],"mappings":"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"}